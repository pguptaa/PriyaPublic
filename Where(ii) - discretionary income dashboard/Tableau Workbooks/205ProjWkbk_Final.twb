<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.1004.1720                               -->
<workbook source-build='10.0.2 (10000.16.1004.1720)' source-platform='mac' version='10.0' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='205ProjWkbk_Mini' path='/workbooks' revision='2.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='census_mapping_rental' inline='true' name='federated.0ita4o90sii9np1b4fbp203w283v' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ec2-54-90-149-155.compute-1.amazonaws.com' name='hadoophive.05pq2oz12gmc4b19rs6531fx6374'>
            <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='default' server='ec2-54-205-79-207.compute-1.amazonaws.com' sslcert='' sslmode='' username='w205' workgroup-auth-mode='as-is'>
              <connection-customization class='hadoophive' enabled='false' version='10.0'>
                <vendor name='hadoophive' />
                <driver name='hadoophive' />
                <customizations>
                  <customization name='CAP_AUTH_DB_IMPERSONATE' value='yes' />
                  <customization name='CAP_AUTH_KERBEROS_IMPERSONATE' value='yes' />
                  <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
                  <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
                  <customization name='CAP_FAST_METADATA' value='no' />
                  <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
                  <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
                  <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
                  <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
                  <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
                  <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
                  <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
                  <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
                  <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
                  <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
                  <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
                  <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
                  <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
                  <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
                  <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
                  <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
                  <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
                  <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
                  <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
                  <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
                  <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
                  <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
                  <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
                  <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
                  <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
                  <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
                  <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
                  <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
                  <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
                  <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
                  <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
                  <customization name='CAP_QUERY_SORT_BY' value='yes' />
                  <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
                  <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
                  <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
                  <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
                  <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
                  <customization name='CAP_QUERY_TOP_N' value='yes' />
                  <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
                  <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
                  <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
                  <customization name='CAP_SELECT_INTO' value='no' />
                  <customization name='CAP_SELECT_TOP_INTO' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
                  <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
                  <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
                  <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
                  <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
          <named-connection caption='mapping' name='textscan.1o4nsgc0n1ns4k18zhaji1k9wxgs'>
            <connection class='textscan' directory='/Users/lisabarcelo/Desktop' filename='mapping.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[mapping.csv].[Metro Id]' />
              <expression op='[rental_pricing].[metro_id]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[census_job_schema].[area]' />
                <expression op='[mapping.csv].[Cbsa Code]' />
              </expression>
            </clause>
            <relation connection='hadoophive.05pq2oz12gmc4b19rs6531fx6374' name='census_job_schema' table='[default].[census_job_schema]' type='table' />
            <relation connection='textscan.1o4nsgc0n1ns4k18zhaji1k9wxgs' name='mapping.csv' table='[mapping#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Cbsa Code' ordinal='0' />
                <column datatype='string' name='Metro Id' ordinal='1' />
                <column datatype='string' name='Metro Name' ordinal='2' />
                <column datatype='string' name='Region' ordinal='3' />
                <column datatype='string' name='State' ordinal='4' />
              </columns>
            </relation>
          </relation>
          <relation connection='hadoophive.05pq2oz12gmc4b19rs6531fx6374' name='rental_pricing' table='[default].[rental_pricing]' type='table' />
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>row_num</remote-name>
            <remote-type>129</remote-type>
            <local-name>[row_num]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>row_num</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prim_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prim_state]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>prim_state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occ_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[occ_code]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>occ_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occ_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[occ_title]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>occ_title</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occ_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[occ_group]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>occ_group</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot_emp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tot_emp]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>tot_emp</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emp_prse</remote-name>
            <remote-type>129</remote-type>
            <local-name>[emp_prse]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>emp_prse</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jobs_1000</remote-name>
            <remote-type>129</remote-type>
            <local-name>[jobs_1000]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>jobs_1000</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>h_mean</remote-name>
            <remote-type>129</remote-type>
            <local-name>[h_mean]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>h_mean</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a_mean</remote-name>
            <remote-type>129</remote-type>
            <local-name>[a_mean]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>a_mean</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_prse</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mean_prse]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>mean_prse</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>h_pct10</remote-name>
            <remote-type>129</remote-type>
            <local-name>[h_pct10]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>h_pct10</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>h_pct25</remote-name>
            <remote-type>129</remote-type>
            <local-name>[h_pct25]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>h_pct25</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>h_median</remote-name>
            <remote-type>129</remote-type>
            <local-name>[h_median]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>h_median</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>h_pct75</remote-name>
            <remote-type>129</remote-type>
            <local-name>[h_pct75]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>h_pct75</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>h_pct90</remote-name>
            <remote-type>129</remote-type>
            <local-name>[h_pct90]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>h_pct90</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a_pct10</remote-name>
            <remote-type>129</remote-type>
            <local-name>[a_pct10]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>a_pct10</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a_pct25</remote-name>
            <remote-type>129</remote-type>
            <local-name>[a_pct25]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>a_pct25</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a_median</remote-name>
            <remote-type>129</remote-type>
            <local-name>[a_median]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>a_median</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a_pct75</remote-name>
            <remote-type>129</remote-type>
            <local-name>[a_pct75]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>a_pct75</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a_pct90</remote-name>
            <remote-type>129</remote-type>
            <local-name>[a_pct90]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>a_pct90</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>annual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[annual]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>annual</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hourly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hourly]</local-name>
            <parent-name>[census_job_schema]</parent-name>
            <remote-alias>hourly</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cbsa Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cbsa Code]</local-name>
            <parent-name>[mapping.csv]</parent-name>
            <remote-alias>Cbsa Code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro Id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metro Id]</local-name>
            <parent-name>[mapping.csv]</parent-name>
            <remote-alias>Metro Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metro Name]</local-name>
            <parent-name>[mapping.csv]</parent-name>
            <remote-alias>Metro Name</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[mapping.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[mapping.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mapping.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[metro_id]</local-name>
            <parent-name>[rental_pricing]</parent-name>
            <remote-alias>metro_id</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[metro_name]</local-name>
            <parent-name>[rental_pricing]</parent-name>
            <remote-alias>metro_name</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_date]</local-name>
            <parent-name>[rental_pricing]</parent-name>
            <remote-alias>price_date</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_usd</remote-name>
            <remote-type>4</remote-type>
            <local-name>[price_usd]</local-name>
            <parent-name>[rental_pricing]</parent-name>
            <remote-alias>price_usd</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>7</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bed_df</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bed_df]</local-name>
            <parent-name>[rental_pricing]</parent-name>
            <remote-alias>bed_df</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='PopTypeDesc' datatype='string' name='[Calculation_1084100890979729410]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [federated.05rqn2s1hh0wpr12r575r0mgazrc].[Calculation_1084100890977796097] = &apos;Exp Growth&apos; THEN &apos;Above Average&apos; ELSE &apos;Average&apos; END' />
      </column>
      <column caption='Minutes in Traffic' datatype='string' name='[Calculation_1084100890985922566]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF max([federated.05rqn2s1hh0wpr12r575r0mgazrc].[Calculation_1084100890985152517]) &gt; 0 THEN str(int(max([federated.05rqn2s1hh0wpr12r575r0mgazrc].[Calculation_1084100890985152517])))&#10;ELSE &quot;Varies&quot; end' />
      </column>
      <column caption='StressType' datatype='string' name='[Calculation_1084100890991382537]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ATTR([federated.05rqn2s1hh0wpr12r575r0mgazrc].[Calculation_1084100890990505992]) = &apos;High Stress&apos; THEN &apos;High Stress&apos; ELSE &apos;Avg Stress&apos; END' />
      </column>
      <column caption='Golden Ratio Y|N' datatype='string' name='[Calculation_964825868887568384]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Mean Prse (copy)])/AVG([price_usd]) &gt;=3 then &apos;Y&apos; ELSE &apos;N&apos; END' />
      </column>
      <column datatype='string' name='[Cbsa Code]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal'>
        <semantic-values semantic-role='[CMSA].[Name]'>
          <semantic-value key='&quot;11244&quot;' value='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' />
          <semantic-value key='&quot;16974&quot;' value='&quot;Chicago-Naperville-Elgin, IL-IN-WI&quot;' />
          <semantic-value key='&quot;19124&quot;' value='&quot;Dallas-Fort Worth-Arlington, TX&quot;' />
          <semantic-value key='&quot;19804&quot;' value='&quot;Detroit-Warren-Dearborn, MI&quot;' />
          <semantic-value key='&quot;22744&quot;' value='&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;' />
          <semantic-value key='&quot;23104&quot;' value='&quot;Dallas-Fort Worth-Arlington, TX&quot;' />
          <semantic-value key='&quot;31084&quot;' value='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' />
          <semantic-value key='&quot;33124&quot;' value='&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;' />
          <semantic-value key='&quot;35614&quot;' value='&quot;New York-Newark-Jersey City, NY-NJ-PA&quot;' />
          <semantic-value key='&quot;37964&quot;' value='&quot;Philadelphia-Camden-Wilmington, PA-NJ-DE-MD&quot;' />
          <semantic-value key='&quot;41884&quot;' value='&quot;San Francisco-Oakland-Hayward, CA&quot;' />
          <semantic-value key='&quot;42644&quot;' value='&quot;Seattle-Tacoma-Bellevue, WA&quot;' />
          <semantic-value key='&quot;47894&quot;' value='&quot;Washington-Arlington-Alexandria, DC-VA-MD-WV&quot;' />
          <semantic-value key='&quot;71654&quot;' value='&quot;Boston-Cambridge-Newton, MA-NH&quot;' />
          <semantic-value key='&quot;72400&quot;' value='&quot;Burlington-South Burlington, VT&quot;' />
          <semantic-value key='&quot;73450&quot;' value='&quot;Hartford-West Hartford-East Hartford, CT&quot;' />
          <semantic-value key='&quot;74950&quot;' value='&quot;Manchester-Nashua, NH&quot;' />
          <semantic-value key='&quot;75700&quot;' value='&quot;New Haven-Milford, CT&quot;' />
          <semantic-value key='&quot;76750&quot;' value='&quot;Portland-South Portland, ME&quot;' />
          <semantic-value key='&quot;77200&quot;' value='&quot;Providence-Warwick, RI-MA&quot;' />
          <semantic-value key='&quot;78100&quot;' value='&quot;Springfield, MA&quot;' />
          <semantic-value key='&quot;79600&quot;' value='&quot;Worcester, MA-CT&quot;' />
        </semantic-values>
      </column>
      <column caption='Golden Ratios' datatype='real' datatype-customized='true' default-format='n#,##0.00000' name='[Golden Ratio (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Mean Prse (copy)])/AVG([price_usd])' />
      </column>
      <column datatype='real' datatype-customized='true' default-format='n#,##0.0' name='[Golden Ratios (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Mean Prse (copy)])/AVG([price_usd])' />
      </column>
      <column caption='Monthly Wages' datatype='real' datatype-customized='true' name='[Mean Prse (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[mean_prse]/12' />
      </column>
      <column datatype='string' hidden='true' name='[Metro Id]' role='dimension' type='nominal' />
      <column aggregate-role-from='[State]' caption='City' datatype='string' name='[Metro Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;California-Lexington Park, MD&quot;' value='Lexington Park, MD' />
          <alias key='&quot;Crestview-Fort Walton Beach-Destin, FL&quot;' value='Fort Walton Beach, FL' />
          <alias key='&quot;Dallas-Fort Worth, TX&quot;' value='Dallas, TX' />
          <alias key='&quot;Lafayette-West Lafayette, IN&quot;' value='West Lafayette, IN' />
          <alias key='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' value='Los Angeles, CA' />
          <alias key='&quot;Louisville-Jefferson County, KY&quot;' value='Louisville, KY' />
          <alias key='&quot;Miami-Fort Lauderdale, FL&quot;' value='Miami, FL' />
          <alias key='&quot;Minneapolis-St Paul, MN&quot;' value='Minneapolis, MN' />
          <alias key='&quot;North Port-Sarasota-Bradenton, FL&quot;' value='Sarasota, FL' />
          <alias key='&quot;Santa Maria-Santa Barbara, CA&quot;' value='Santa Barbara, CA' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Pop' datatype='integer' datatype-customized='true' hidden='true' name='[Population (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([population])' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='A Mean' datatype='string' hidden='true' name='[a_mean]' role='dimension' type='nominal' />
      <column caption='A Median' datatype='string' hidden='true' name='[a_median]' role='dimension' type='nominal' />
      <column caption='A Pct10' datatype='string' hidden='true' name='[a_pct10]' role='dimension' type='nominal' />
      <column caption='A Pct25' datatype='string' hidden='true' name='[a_pct25]' role='dimension' type='nominal' />
      <column caption='A Pct75' datatype='string' hidden='true' name='[a_pct75]' role='dimension' type='nominal' />
      <column caption='A Pct90' datatype='string' hidden='true' name='[a_pct90]' role='dimension' type='nominal' />
      <column caption='Aff Date' datatype='string' hidden='true' name='[aff_date]' role='dimension' type='nominal' />
      <column caption='Annual' datatype='string' hidden='true' name='[annual]' role='dimension' type='nominal' />
      <column caption='Area' datatype='string' hidden='true' name='[area]' role='dimension' type='nominal' />
      <column aggregate-role-from='[prim_state]' caption='City Name' datatype='string' hidden='true' name='[area_name]' role='dimension' type='nominal' />
      <column caption='Bed Df' datatype='string' name='[bed_df]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0&quot;' value='Studio' />
          <alias key='&quot;1&quot;' value='1 Bdrm' />
          <alias key='&quot;2&quot;' value='2 Bdrm' />
          <alias key='&quot;3&quot;' value='3 Bdrm' />
          <alias key='&quot;4&quot;' value='4 Bdrm' />
          <alias key='&quot;5&quot;' value='5 Bdrm +' />
        </aliases>
      </column>
      <column caption='Emp Prse' datatype='string' hidden='true' name='[emp_prse]' role='dimension' type='nominal' />
      <column caption='H Mean' datatype='string' hidden='true' name='[h_mean]' role='dimension' type='nominal' />
      <column caption='H Median' datatype='string' hidden='true' name='[h_median]' role='dimension' type='nominal' />
      <column caption='H Pct10' datatype='string' hidden='true' name='[h_pct10]' role='dimension' type='nominal' />
      <column caption='H Pct25' datatype='string' hidden='true' name='[h_pct25]' role='dimension' type='nominal' />
      <column caption='H Pct75' datatype='string' hidden='true' name='[h_pct75]' role='dimension' type='nominal' />
      <column caption='H Pct90' datatype='string' hidden='true' name='[h_pct90]' role='dimension' type='nominal' />
      <column caption='Hourly' datatype='string' hidden='true' name='[hourly]' role='dimension' type='nominal' />
      <column caption='Jobs 1000' datatype='string' hidden='true' name='[jobs_1000]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Mean Prse' datatype='integer' datatype-customized='true' name='[mean_prse]' role='measure' type='quantitative' />
      <column caption='Metro Id (City Income Traffic)' datatype='string' hidden='true' name='[metro_id (city_income_traffic)]' role='dimension' type='nominal' />
      <column caption='Metro Id1' datatype='string' hidden='true' name='[metro_id]' role='dimension' type='nominal' />
      <column caption='Metro Name1' datatype='string' hidden='true' name='[metro_name]' role='dimension' type='nominal' />
      <column caption='Occ Code' datatype='string' hidden='true' name='[occ_code]' role='dimension' type='nominal' />
      <column caption='Occ Group' datatype='string' hidden='true' name='[occ_group]' role='dimension' type='nominal' />
      <column caption='Occ Title' datatype='string' name='[occ_title]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Price Date - Split 1' datatype='integer' name='[price_date - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ita4o90sii9np1b4fbp203w283v].[price_date]'>
        <calculation class='tableau' formula='INT( SPLIT( [price_date], &quot;-&quot;, 1 ) )' />
      </column>
      <column aggregation='Sum' caption='Price Date - Split 2' datatype='integer' name='[price_date - Split 2]' role='dimension' type='ordinal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0ita4o90sii9np1b4fbp203w283v].[price_date]'>
        <calculation class='tableau' formula='INT( SPLIT( [price_date], &quot;-&quot;, 2 ) )' />
      </column>
      <column caption='Price Date' datatype='string' name='[price_date]' role='dimension' type='nominal' />
      <column caption='Price Usd' datatype='real' name='[price_usd]' role='measure' type='quantitative' />
      <column caption='Prim State' datatype='string' hidden='true' name='[prim_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Row Num' datatype='string' hidden='true' name='[row_num]' role='dimension' type='nominal' />
      <column caption='Tot Emp' datatype='string' hidden='true' name='[tot_emp]' role='dimension' type='nominal' />
      <column-instance column='[Population (copy)]' derivation='None' name='[none:Population (copy):ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='City Name, Prim State' />
        <drill-path name='City, State'>
          <field>[State]</field>
          <field>[Metro Name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/lisabarcelo/Documents/My Tableau Repository/Datasources/final_extract.tde' schema='Extract' tablename='Extract' update-time='12/04/2016 05:56:09 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Mean Prse (copy)]' formula='[mean_prse]/12' />
            <calculation column='[price_date - Split 1]' formula='INT( SPLIT( [price_date], &quot;-&quot;, 1 ) )' />
            <calculation column='[price_date - Split 2]' formula='INT( SPLIT( [price_date], &quot;-&quot;, 2 ) )' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3419388' timestamp-start='2016-12-04 05:56:09.280' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Cbsa Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cbsa Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cbsa Code</remote-alias>
              <ordinal>0</ordinal>
              <family>mapping.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>250</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10180&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;79600&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mean Prse (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mean Prse (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mean Prse (copy)</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12668</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1401.6666666666667</statistic>
                <statistic aggregation='Max' datatype='real'>23871.666666666668</statistic>
                <statistic aggregation='Count' datatype='integer'>3362472</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Metro Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Metro Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Metro Name</remote-alias>
              <ordinal>2</ordinal>
              <family>mapping.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>247</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abilene, TX&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Youngstown, OH&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>3</ordinal>
              <family>mapping.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Midwest&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Southeast&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>4</ordinal>
              <family>mapping.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bed_df</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bed_df]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bed_df</remote-alias>
              <ordinal>5</ordinal>
              <family>rental_pricing</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;5&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mean_prse</remote-name>
              <remote-type>3</remote-type>
              <local-name>[mean_prse]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mean_prse</remote-alias>
              <ordinal>6</ordinal>
              <family>census_job_schema</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12668</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>16820</statistic>
                <statistic aggregation='Max' datatype='integer'>286460</statistic>
                <statistic aggregation='Count' datatype='integer'>3362472</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>occ_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[occ_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>occ_title</remote-alias>
              <ordinal>7</ordinal>
              <family>census_job_schema</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>838</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accountants and Auditors&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zoologists and Wildlife Biologists&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_date - Split 1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[price_date - Split 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_date - Split 1</remote-alias>
              <ordinal>8</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2016</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
                <statistic aggregation='Median' datatype='integer'>2016</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_date - Split 2</remote-name>
              <remote-type>16</remote-type>
              <local-name>[price_date - Split 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_date - Split 2</remote-alias>
              <ordinal>9</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[price_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_date</remote-alias>
              <ordinal>10</ordinal>
              <family>rental_pricing</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2016-01&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2016-09&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_usd</remote-name>
              <remote-type>4</remote-type>
              <local-name>[price_usd]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_usd</remote-alias>
              <ordinal>11</ordinal>
              <family>rental_pricing</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1222</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>402.5</statistic>
                <statistic aggregation='Max' datatype='real'>5600.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3419388</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Region]' filter-group='2'>
          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
            <groupfilter function='level-members' level='[Region]' />
            <groupfilter function='member' level='[Region]' member='%null%' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[bed_df]' filter-group='2'>
          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
            <groupfilter function='level-members' level='[bed_df]' />
            <groupfilter function='member' level='[bed_df]' member='%null%' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[price_date - Split 1]'>
          <groupfilter function='member' level='[price_date - Split 1]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.518868' measure-ordering='alphabetic' measure-percentage='0.481132' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Population (copy):ok]' type='palette'>
            <map to='#499894'>
              <bucket>215</bucket>
            </map>
            <map to='#499894'>
              <bucket>320</bucket>
            </map>
            <map to='#499894'>
              <bucket>475</bucket>
            </map>
            <map to='#499894'>
              <bucket>655</bucket>
            </map>
            <map to='#499894'>
              <bucket>820</bucket>
            </map>
            <map to='#499894'>
              <bucket>1675</bucket>
            </map>
            <map to='#499894'>
              <bucket>2070</bucket>
            </map>
            <map to='#499894'>
              <bucket>2570</bucket>
            </map>
            <map to='#499894'>
              <bucket>2940</bucket>
            </map>
            <map to='#499894'>
              <bucket>3260</bucket>
            </map>
            <map to='#499894'>
              <bucket>9900</bucket>
            </map>
            <map to='#499894'>
              <bucket>12305</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>280</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>385</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>590</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>725</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1505</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1890</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2445</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2840</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3090</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3370</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>12100</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>195</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>300</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>445</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>620</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>775</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1595</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1975</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2535</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2900</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3180</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3410</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>12200</bucket>
            </map>
            <map to='#79706e'>
              <bucket>235</bucket>
            </map>
            <map to='#79706e'>
              <bucket>345</bucket>
            </map>
            <map to='#79706e'>
              <bucket>525</bucket>
            </map>
            <map to='#79706e'>
              <bucket>685</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1310</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1770</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2195</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2655</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2985</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3300</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11140</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>220</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>325</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>490</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>660</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>905</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1690</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2090</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2590</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2955</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3270</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10500</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>12345</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>200</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>305</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>450</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>640</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>780</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1620</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2000</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2550</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2910</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3185</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3440</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>12215</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>265</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>375</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>570</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>715</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1410</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1860</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2395</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2810</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3060</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3350</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>12000</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>180</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>285</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>400</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>595</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>735</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1525</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1905</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2480</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2855</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3100</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3375</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>12120</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>255</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>365</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>550</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>705</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1370</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1830</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2295</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2740</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3035</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3330</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>11845</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>205</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>310</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>455</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>645</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>790</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1650</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2010</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2555</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2920</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3200</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3470</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>12235</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>240</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>350</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>530</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>690</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1325</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1780</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2200</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2660</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3005</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3310</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11305</bucket>
            </map>
            <map to='#d37295'>
              <bucket>245</bucket>
            </map>
            <map to='#d37295'>
              <bucket>355</bucket>
            </map>
            <map to='#d37295'>
              <bucket>540</bucket>
            </map>
            <map to='#d37295'>
              <bucket>695</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1340</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1800</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2230</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2685</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3010</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3320</bucket>
            </map>
            <map to='#d37295'>
              <bucket>11420</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>260</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>370</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>560</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>710</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1390</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1840</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2350</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2780</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3050</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3340</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>11950</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>275</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>380</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>585</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>720</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1500</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1870</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2435</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2825</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3080</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3360</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>12050</bucket>
            </map>
            <map to='#e15759'>
              <bucket>225</bucket>
            </map>
            <map to='#e15759'>
              <bucket>330</bucket>
            </map>
            <map to='#e15759'>
              <bucket>500</bucket>
            </map>
            <map to='#e15759'>
              <bucket>665</bucket>
            </map>
            <map to='#e15759'>
              <bucket>910</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1705</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2130</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2620</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2960</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3280</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10710</bucket>
            </map>
            <map to='#e15759'>
              <bucket>12390</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>210</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>315</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>460</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>650</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>805</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1670</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2050</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2565</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2930</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3220</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3480</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>12260</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>185</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>290</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>410</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>605</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>745</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1540</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1915</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2490</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2870</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3140</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3380</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>12150</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>250</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>360</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>545</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>700</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1355</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1815</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2250</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2700</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3020</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3325</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>11760</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>230</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>340</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>515</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>670</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1300</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1740</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2150</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2625</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2965</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3290</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10920</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12430</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>190</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>295</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>430</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>615</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>760</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1550</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1935</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2530</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2890</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3150</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3400</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>12175</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Calculation_964825868887568384' />
        <field-sort-custom-order field='Golden Ratio (copy)' />
        <field-sort-custom-order field='Golden Ratios (copy)' />
        <field-sort-custom-order field='Mean Prse (copy)' />
        <field-sort-custom-order field='price_date - Split 1' />
        <field-sort-custom-order field='price_date - Split 2' />
        <field-sort-custom-order field='Calculation_1084100890985922566' />
        <field-sort-custom-order field='Calculation_1084100890979729410' />
        <field-sort-custom-order field='Calculation_1084100890991382537' />
        <field-sort-custom-order field='Calculation_964825868918755329' />
        <field-sort-custom-order field='mean_prse' />
        <field-sort-custom-order field='Calculation_1024287457972670464' />
        <field-sort-custom-order field='occ_title' />
        <field-sort-custom-order field='ahod_per_cons' />
        <field-sort-custom-order field='ahod_per_cons_rank' />
        <field-sort-custom-order field='congested_trav' />
        <field-sort-custom-order field='csi_rank' />
        <field-sort-custom-order field='csi_val' />
        <field-sort-custom-order field='metro_id (city_income_traffic)' />
        <field-sort-custom-order field='metro_id2' />
        <field-sort-custom-order field='metro_region' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='tti_val' />
        <field-sort-custom-order field='wage_usd' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Cbsa Code' />
        <field-sort-custom-order field='Metro Name' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='bed_df' />
        <field-sort-custom-order field='price_date' />
        <field-sort-custom-order field='price_usd' />
      </field-sort-info>
      <datasource-dependencies datasource='federated.05rqn2s1hh0wpr12r575r0mgazrc'>
        <column caption='PopGrowthType' datatype='string' name='[Calculation_1084100890977796097]' role='measure' type='nominal'>
          <calculation class='tableau' formula='IF MIN(int([population]))/MAX(int([population])) &gt; 0.3 THEN &apos;Exp Growth&apos; ELSE &apos;Avg Growth&apos; END' />
        </column>
        <column caption='DailyMinWasteTraffic' datatype='real' name='[Calculation_1084100890985152517]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='int([ahod_per_cons])*60/(49*5)' />
        </column>
        <column caption='CSIType' datatype='string' name='[Calculation_1084100890990505992]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF FLOAT([csi_val]) &gt;  1.4 THEN &apos;High Stress&apos; ELSE &apos;Avg Stress&apos; END' />
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[Region]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='member' level='[Region]' member='%null%' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[bed_df]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[bed_df]' />
          <groupfilter function='member' level='[bed_df]' member='%null%' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[price_date - Split 1]' filter-group='2'>
        <groupfilter function='member' level='[price_date - Split 1]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
    <datasource caption='city_income_traffic (default.city_income_traffic) (default)' inline='true' name='federated.05rqn2s1hh0wpr12r575r0mgazrc' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ec2-54-205-79-207.compute-1.amazonaws.com' name='hadoophive.1hu9duy1u8tg0c17lggec1yydtyl'>
            <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='default' server='ec2-54-205-79-207.compute-1.amazonaws.com' sslcert='' sslmode='' username='w205' workgroup-auth-mode='as-is'>
              <connection-customization class='hadoophive' enabled='false' version='10.0'>
                <vendor name='hadoophive' />
                <driver name='hadoophive' />
                <customizations>
                  <customization name='CAP_AUTH_DB_IMPERSONATE' value='yes' />
                  <customization name='CAP_AUTH_KERBEROS_IMPERSONATE' value='yes' />
                  <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
                  <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
                  <customization name='CAP_FAST_METADATA' value='no' />
                  <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
                  <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
                  <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
                  <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
                  <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
                  <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
                  <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
                  <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
                  <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
                  <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
                  <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
                  <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
                  <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
                  <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
                  <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
                  <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
                  <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
                  <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
                  <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
                  <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
                  <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
                  <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
                  <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
                  <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
                  <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
                  <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
                  <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
                  <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
                  <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
                  <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
                  <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
                  <customization name='CAP_QUERY_SORT_BY' value='yes' />
                  <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
                  <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
                  <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
                  <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
                  <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
                  <customization name='CAP_QUERY_TOP_N' value='yes' />
                  <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
                  <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
                  <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
                  <customization name='CAP_SELECT_INTO' value='no' />
                  <customization name='CAP_SELECT_TOP_INTO' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
                  <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
                  <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
                  <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
                  <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='hadoophive.1hu9duy1u8tg0c17lggec1yydtyl' name='city_income_traffic' table='[default].[city_income_traffic]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>metro_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[metro_region]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>metro_region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[metro_id]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>metro_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aff_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aff_date]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>aff_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wage_usd</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wage_usd]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>wage_usd</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro_id2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[metro_id2]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>metro_id2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>129</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>congested_trav</remote-name>
            <remote-type>129</remote-type>
            <local-name>[congested_trav]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>congested_trav</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ahod_per_cons</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ahod_per_cons]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>ahod_per_cons</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ahod_per_cons_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ahod_per_cons_rank]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>ahod_per_cons_rank</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tti_val</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tti_val]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>tti_val</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>csi_val</remote-name>
            <remote-type>129</remote-type>
            <local-name>[csi_val]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>csi_val</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>csi_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[csi_rank]</local-name>
            <parent-name>[city_income_traffic]</parent-name>
            <remote-alias>csi_rank</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='PopulationType' datatype='string' name='[Calculation_1084100890975350784]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF max(int([population])) &lt; 5000 THEN &apos;Small&apos; ELSEIF max(int([population])) &lt; 15000 THEN &apos;Medium&apos; ELSE &apos;Large&apos; END' />
      </column>
      <column caption='PopGrowthType' datatype='string' name='[Calculation_1084100890977796097]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF MIN(int([population]))/MAX(int([population])) &gt; 0.3 THEN &apos;Exp Growth&apos; ELSE &apos;Avg Growth&apos; END' />
      </column>
      <column caption='DailyMinWasteTraffic' datatype='real' name='[Calculation_1084100890985152517]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='int([ahod_per_cons])*60/(49*5)' />
      </column>
      <column caption='CSIType' datatype='string' name='[Calculation_1084100890990505992]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF FLOAT([csi_val]) &gt;  1.4 THEN &apos;High Stress&apos; ELSE &apos;Avg Stress&apos; END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Aff Date' datatype='string' name='[aff_date]' role='dimension' type='nominal' />
      <column caption='Ahod Per Cons' datatype='string' name='[ahod_per_cons]' role='dimension' type='nominal' />
      <column caption='Ahod Per Cons Rank' datatype='string' name='[ahod_per_cons_rank]' role='dimension' type='nominal' />
      <column caption='Congested Trav' datatype='string' name='[congested_trav]' role='dimension' type='nominal' />
      <column caption='Csi Rank' datatype='string' name='[csi_rank]' role='dimension' type='nominal' />
      <column caption='Csi Val' datatype='string' name='[csi_val]' role='dimension' type='nominal' />
      <column caption='Metro Id2' datatype='string' name='[metro_id2]' role='dimension' type='nominal' />
      <column caption='Metro Id' datatype='string' name='[metro_id]' role='dimension' type='nominal' />
      <column caption='Metro Region' datatype='string' name='[metro_region]' role='dimension' type='nominal' />
      <column caption='Population' datatype='string' name='[population]' role='dimension' type='nominal' />
      <column caption='Tti Val' datatype='string' name='[tti_val]' role='dimension' type='nominal' />
      <column caption='Wage Usd' datatype='string' name='[wage_usd]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/lisabarcelo/Documents/My Tableau Repository/Datasources/city_income_traffic (default.city_income_traffic) (default).tde' schema='Extract' tablename='Extract' update-time='12/04/2016 06:02:53 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1084100890985152517]' formula='int([ahod_per_cons])*60/(49*5)' />
            <calculation column='[Calculation_1084100890990505992]' formula='IF FLOAT([csi_val]) &gt;  1.4 THEN &apos;High Stress&apos; ELSE &apos;Avg Stress&apos; END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11835' timestamp-start='2016-12-04 06:02:53.423' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aff_date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[aff_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>aff_date</remote-alias>
              <ordinal>1</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1982&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2014&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11336</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ahod_per_cons</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ahod_per_cons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ahod_per_cons</remote-alias>
              <ordinal>2</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>86</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ahod_per_cons_rank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ahod_per_cons_rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ahod_per_cons_rank</remote-alias>
              <ordinal>3</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>congested_trav</remote-name>
              <remote-type>129</remote-type>
              <local-name>[congested_trav]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>congested_trav</remote-alias>
              <ordinal>4</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;11&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;blank&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>csi_rank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[csi_rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>csi_rank</remote-alias>
              <ordinal>5</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>csi_val</remote-name>
              <remote-type>129</remote-type>
              <local-name>[csi_val]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>csi_val</remote-alias>
              <ordinal>6</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1.01&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;1.64&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>metro_id2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[metro_id2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>metro_id2</remote-alias>
              <ordinal>7</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;753924&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>metro_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[metro_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>metro_id</remote-alias>
              <ordinal>8</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;394312&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;753924&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11336</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>metro_region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[metro_region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>metro_region</remote-alias>
              <ordinal>9</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Albuquerque, NM&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Winston-Salem, NC&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11336</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>129</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>10</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>787</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;100&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;995&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tti_val</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tti_val]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tti_val</remote-alias>
              <ordinal>11</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>46</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;1.45&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wage_usd</remote-name>
              <remote-type>129</remote-type>
              <local-name>[wage_usd]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wage_usd</remote-alias>
              <ordinal>12</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8708</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;87871.2&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11336</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>13</ordinal>
              <family>city_income_traffic</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1982&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2014&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;1998&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1084100890985152517</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1084100890985152517]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1084100890985152517</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.24489795918367346</statistic>
                <statistic aggregation='Max' datatype='real'>21.061224489795919</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1084100890990505992</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1084100890990505992]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1084100890990505992</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>11</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Avg Stress&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;High Stress&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>11835</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>44</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.718868' measure-ordering='alphabetic' measure-percentage='0.281132' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.05rqn2s1hh0wpr12r575r0mgazrc'>
      <column caption='Metro Region' datatype='string' name='[metro_region]' role='dimension' type='nominal' />
      <column-instance column='[metro_region]' derivation='None' name='[none:metro_region:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0ita4o90sii9np1b4fbp203w283v'>
      <column aggregate-role-from='[State]' caption='City' datatype='string' name='[Metro Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;California-Lexington Park, MD&quot;' value='Lexington Park, MD' />
          <alias key='&quot;Crestview-Fort Walton Beach-Destin, FL&quot;' value='Fort Walton Beach, FL' />
          <alias key='&quot;Dallas-Fort Worth, TX&quot;' value='Dallas, TX' />
          <alias key='&quot;Lafayette-West Lafayette, IN&quot;' value='West Lafayette, IN' />
          <alias key='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' value='Los Angeles, CA' />
          <alias key='&quot;Louisville-Jefferson County, KY&quot;' value='Louisville, KY' />
          <alias key='&quot;Miami-Fort Lauderdale, FL&quot;' value='Miami, FL' />
          <alias key='&quot;Minneapolis-St Paul, MN&quot;' value='Minneapolis, MN' />
          <alias key='&quot;North Port-Sarasota-Bradenton, FL&quot;' value='Sarasota, FL' />
          <alias key='&quot;Santa Maria-Santa Barbara, CA&quot;' value='Santa Barbara, CA' />
        </aliases>
      </column>
      <column-instance column='[Metro Name]' derivation='None' name='[none:Metro Name:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0ita4o90sii9np1b4fbp203w283v' target='federated.05rqn2s1hh0wpr12r575r0mgazrc'>
      <column-mapping>
        <map key='[federated.0ita4o90sii9np1b4fbp203w283v].[none:Metro Name:nk]' value='[federated.05rqn2s1hh0wpr12r575r0mgazrc].[none:metro_region:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource inline='true' name='Dark' source-platform='mac' version='10.0'>
      <connection api-key='pk.eyJ1IjoiYmFyY2VsbGUiLCJhIjoiY2l2dm52YXZkMDBhdDJ0bWRwZTRtY3ZpcyJ9.Ak7zSNn_T5G4p9xy7Mgx6A' class='MapBox' description='' full-url='https://api.mapbox.com/styles/v1/barcelle/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoiYmFyY2VsbGUiLCJhIjoiY2l2dm52YXZkMDBhdDJ0bWRwZTRtY3ZpcyJ9.Ak7zSNn_T5G4p9xy7Mgx6A' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US/normal' url-format='/styles/v1/barcelle/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoiYmFyY2VsbGUiLCJhIjoiY2l2dm52YXZkMDBhdDJ0bWRwZTRtY3ZpcyJ9.Ak7zSNn_T5G4p9xy7Mgx6A' username='barcelle' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Dark' name='civvo2jcu00042ko83k5bxn8o' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='Dark' name='Dark' wait-tile-color='#dddddd'>
          <map-layer-style name='Dark' request-string='civvo2jcu00042ko83k5bxn8o' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='10.0'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='civvo2jcu00042ko83k5bxn8o' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
  </mapsources>
  <worksheets>
    <worksheet name='where(ii) map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='24'>where(</run>
            <run bold='true' fontalignment='1' fontcolor='#edc948' fontsize='24'>ii</run>
            <run bold='true' fontalignment='1' fontsize='24'>)</run>
            <run bold='true' fontalignment='1' fontcolor='#edc948' fontsize='12' italic='true'>&#10;smart</run>
            <run fontalignment='1' fontcolor='#edc948' fontsize='12' italic='true'>Æ </run>
            <run fontalignment='1' fontsize='12' italic='true'>job hunting</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='census_mapping_rental' name='federated.0ita4o90sii9np1b4fbp203w283v' />
            <datasource caption='city_income_traffic (default.city_income_traffic) (default)' name='federated.05rqn2s1hh0wpr12r575r0mgazrc' />
          </datasources>
          <mapsources>
            <mapsource name='Dark' />
          </mapsources>
          <datasource-dependencies datasource='federated.05rqn2s1hh0wpr12r575r0mgazrc'>
            <column caption='PopGrowthType' datatype='string' name='[Calculation_1084100890977796097]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF MIN(int([population]))/MAX(int([population])) &gt; 0.3 THEN &apos;Exp Growth&apos; ELSE &apos;Avg Growth&apos; END' />
            </column>
            <column caption='DailyMinWasteTraffic' datatype='real' name='[Calculation_1084100890985152517]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([ahod_per_cons])*60/(49*5)' />
            </column>
            <column caption='CSIType' datatype='string' name='[Calculation_1084100890990505992]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF FLOAT([csi_val]) &gt;  1.4 THEN &apos;High Stress&apos; ELSE &apos;Avg Stress&apos; END' />
            </column>
            <column caption='Ahod Per Cons' datatype='string' name='[ahod_per_cons]' role='dimension' type='nominal' />
            <column caption='Csi Val' datatype='string' name='[csi_val]' role='dimension' type='nominal' />
            <column caption='Population' datatype='string' name='[population]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ita4o90sii9np1b4fbp203w283v'>
            <column caption='PopTypeDesc' datatype='string' name='[Calculation_1084100890979729410]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [federated.05rqn2s1hh0wpr12r575r0mgazrc].[Calculation_1084100890977796097] = &apos;Exp Growth&apos; THEN &apos;Above Average&apos; ELSE &apos;Average&apos; END' />
            </column>
            <column caption='Minutes in Traffic' datatype='string' name='[Calculation_1084100890985922566]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF max([federated.05rqn2s1hh0wpr12r575r0mgazrc].[Calculation_1084100890985152517]) &gt; 0 THEN str(int(max([federated.05rqn2s1hh0wpr12r575r0mgazrc].[Calculation_1084100890985152517])))&#10;ELSE &quot;Varies&quot; end' />
            </column>
            <column caption='StressType' datatype='string' name='[Calculation_1084100890991382537]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ATTR([federated.05rqn2s1hh0wpr12r575r0mgazrc].[Calculation_1084100890990505992]) = &apos;High Stress&apos; THEN &apos;High Stress&apos; ELSE &apos;Avg Stress&apos; END' />
            </column>
            <column datatype='string' name='[Cbsa Code]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal'>
              <semantic-values semantic-role='[CMSA].[Name]'>
                <semantic-value key='&quot;11244&quot;' value='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' />
                <semantic-value key='&quot;16974&quot;' value='&quot;Chicago-Naperville-Elgin, IL-IN-WI&quot;' />
                <semantic-value key='&quot;19124&quot;' value='&quot;Dallas-Fort Worth-Arlington, TX&quot;' />
                <semantic-value key='&quot;19804&quot;' value='&quot;Detroit-Warren-Dearborn, MI&quot;' />
                <semantic-value key='&quot;22744&quot;' value='&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;' />
                <semantic-value key='&quot;23104&quot;' value='&quot;Dallas-Fort Worth-Arlington, TX&quot;' />
                <semantic-value key='&quot;31084&quot;' value='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' />
                <semantic-value key='&quot;33124&quot;' value='&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;' />
                <semantic-value key='&quot;35614&quot;' value='&quot;New York-Newark-Jersey City, NY-NJ-PA&quot;' />
                <semantic-value key='&quot;37964&quot;' value='&quot;Philadelphia-Camden-Wilmington, PA-NJ-DE-MD&quot;' />
                <semantic-value key='&quot;41884&quot;' value='&quot;San Francisco-Oakland-Hayward, CA&quot;' />
                <semantic-value key='&quot;42644&quot;' value='&quot;Seattle-Tacoma-Bellevue, WA&quot;' />
                <semantic-value key='&quot;47894&quot;' value='&quot;Washington-Arlington-Alexandria, DC-VA-MD-WV&quot;' />
                <semantic-value key='&quot;71654&quot;' value='&quot;Boston-Cambridge-Newton, MA-NH&quot;' />
                <semantic-value key='&quot;72400&quot;' value='&quot;Burlington-South Burlington, VT&quot;' />
                <semantic-value key='&quot;73450&quot;' value='&quot;Hartford-West Hartford-East Hartford, CT&quot;' />
                <semantic-value key='&quot;74950&quot;' value='&quot;Manchester-Nashua, NH&quot;' />
                <semantic-value key='&quot;75700&quot;' value='&quot;New Haven-Milford, CT&quot;' />
                <semantic-value key='&quot;76750&quot;' value='&quot;Portland-South Portland, ME&quot;' />
                <semantic-value key='&quot;77200&quot;' value='&quot;Providence-Warwick, RI-MA&quot;' />
                <semantic-value key='&quot;78100&quot;' value='&quot;Springfield, MA&quot;' />
                <semantic-value key='&quot;79600&quot;' value='&quot;Worcester, MA-CT&quot;' />
              </semantic-values>
            </column>
            <column caption='Golden Ratios' datatype='real' datatype-customized='true' default-format='n#,##0.00000' name='[Golden Ratio (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Mean Prse (copy)])/AVG([price_usd])' />
            </column>
            <column datatype='real' datatype-customized='true' default-format='n#,##0.0' name='[Golden Ratios (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Mean Prse (copy)])/AVG([price_usd])' />
            </column>
            <column caption='Monthly Wages' datatype='real' datatype-customized='true' name='[Mean Prse (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[mean_prse]/12' />
            </column>
            <column aggregate-role-from='[State]' caption='City' datatype='string' name='[Metro Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;California-Lexington Park, MD&quot;' value='Lexington Park, MD' />
                <alias key='&quot;Crestview-Fort Walton Beach-Destin, FL&quot;' value='Fort Walton Beach, FL' />
                <alias key='&quot;Dallas-Fort Worth, TX&quot;' value='Dallas, TX' />
                <alias key='&quot;Lafayette-West Lafayette, IN&quot;' value='West Lafayette, IN' />
                <alias key='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' value='Los Angeles, CA' />
                <alias key='&quot;Louisville-Jefferson County, KY&quot;' value='Louisville, KY' />
                <alias key='&quot;Miami-Fort Lauderdale, FL&quot;' value='Miami, FL' />
                <alias key='&quot;Minneapolis-St Paul, MN&quot;' value='Minneapolis, MN' />
                <alias key='&quot;North Port-Sarasota-Bradenton, FL&quot;' value='Sarasota, FL' />
                <alias key='&quot;Santa Maria-Santa Barbara, CA&quot;' value='Santa Barbara, CA' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Mean Prse (copy)]' derivation='Avg' name='[avg:Mean Prse (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_usd]' derivation='Avg' name='[avg:price_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Bed Df' datatype='string' name='[bed_df]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Studio' />
                <alias key='&quot;1&quot;' value='1 Bdrm' />
                <alias key='&quot;2&quot;' value='2 Bdrm' />
                <alias key='&quot;3&quot;' value='3 Bdrm' />
                <alias key='&quot;4&quot;' value='4 Bdrm' />
                <alias key='&quot;5&quot;' value='5 Bdrm +' />
              </aliases>
            </column>
            <column aggregation='CountD' caption='Mean Prse' datatype='integer' datatype-customized='true' name='[mean_prse]' role='measure' type='quantitative' />
            <column-instance column='[Cbsa Code]' derivation='None' name='[none:Cbsa Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Metro Name]' derivation='None' name='[none:Metro Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[bed_df]' derivation='None' name='[none:bed_df:nk]' pivot='key' type='nominal' />
            <column-instance column='[occ_title]' derivation='None' name='[none:occ_title:nk]' pivot='key' type='nominal' />
            <column caption='Occ Title' datatype='string' name='[occ_title]' role='dimension' type='nominal' />
            <column caption='Price Usd' datatype='real' name='[price_usd]' role='measure' type='quantitative' />
            <column-instance column='[Golden Ratios (copy)]' derivation='User' name='[rank:usr:Golden Ratios (copy):qk:21]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' rank-options='Unique,Descending' type='Rank'>
                <order field='[federated.0ita4o90sii9np1b4fbp203w283v].[Metro Name]' />
                <order field='[federated.0ita4o90sii9np1b4fbp203w283v].[Cbsa Code]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1084100890979729410]' derivation='User' name='[usr:Calculation_1084100890979729410:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1084100890985922566]' derivation='User' name='[usr:Calculation_1084100890985922566:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1084100890991382537]' derivation='User' name='[usr:Calculation_1084100890991382537:nk]' pivot='key' type='nominal' />
            <column-instance column='[Golden Ratio (copy)]' derivation='User' name='[usr:Golden Ratio (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ita4o90sii9np1b4fbp203w283v].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ita4o90sii9np1b4fbp203w283v].[none:bed_df:nk]'>
            <groupfilter function='level-members' level='[none:bed_df:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ita4o90sii9np1b4fbp203w283v].[none:occ_title:nk]' context='true'>
            <groupfilter function='level-members' level='[none:occ_title:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ita4o90sii9np1b4fbp203w283v].[rank:usr:Golden Ratios (copy):qk:21]' included-values='in-range'>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.0ita4o90sii9np1b4fbp203w283v].[none:occ_title:nk]</column>
            <column>[federated.0ita4o90sii9np1b4fbp203w283v].[none:Region:nk]</column>
            <column>[federated.0ita4o90sii9np1b4fbp203w283v].[none:bed_df:nk]</column>
            <column>[federated.0ita4o90sii9np1b4fbp203w283v].[rank:usr:Golden Ratios (copy):qk:21]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ita4o90sii9np1b4fbp203w283v].[avg:Mean Prse (copy):qk]' value='c&quot;$&quot;#,##0' />
            <format attr='text-format' field='[federated.0ita4o90sii9np1b4fbp203w283v].[avg:price_usd:qk]' value='c&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='civvo2jcu00042ko83k5bxn8o' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0ita4o90sii9np1b4fbp203w283v].[none:occ_title:nk]' value='1. Search Jobs'>
              <formatted-text>
                <run>1. </run>
                <run fontcolor='#edc948'>Search</run>
                <run> Jobs</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0ita4o90sii9np1b4fbp203w283v].[none:Region:nk]' value='2. Pick a US Region'>
              <formatted-text>
                <run>2. Pick a </run>
                <run fontcolor='#edc948'>US Region</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0ita4o90sii9np1b4fbp203w283v].[none:bed_df:nk]' value='3. Pick Your Housing Size'>
              <formatted-text>
                <run>3. Pick Your </run>
                <run fontcolor='#edc948'>Housing</run>
                <run> Size</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0ita4o90sii9np1b4fbp203w283v].[rank:usr:Golden Ratios (copy):qk:21]' value='where(ii) top ranked cities&#10;slide to include/exclude cities'>
              <formatted-text>
                <run bold='true' fontalignment='1'>where(</run>
                <run bold='true' fontalignment='1' fontcolor='#edc948'>ii</run>
                <run bold='true' fontalignment='1'>) </run>
                <run fontalignment='1'>top ranked cities</run>
                <run fontalignment='1' fontsize='8' italic='true'>&#10;slide to include/exclude cities</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Golden Ratio (copy):qk]' />
              <lod column='[federated.0ita4o90sii9np1b4fbp203w283v].[avg:price_usd:qk]' />
              <lod column='[federated.0ita4o90sii9np1b4fbp203w283v].[avg:Mean Prse (copy):qk]' />
              <lod column='[federated.0ita4o90sii9np1b4fbp203w283v].[none:Metro Name:nk]' />
              <lod column='[federated.0ita4o90sii9np1b4fbp203w283v].[none:Cbsa Code:nk]' />
              <lod column='[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890979729410:nk]' />
              <lod column='[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890985922566:nk]' />
              <lod column='[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890991382537:nk]' />
              <text column='[federated.0ita4o90sii9np1b4fbp203w283v].[rank:usr:Golden Ratios (copy):qk:21]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>City:</run>
                <run fontcolor='#898989'> &lt;[federated.0ita4o90sii9np1b4fbp203w283v].[none:Metro Name:nk]&gt;</run>
                <run bold='true'>&#10;where(</run>
                <run bold='true' fontcolor='#edc948'>ii</run>
                <run bold='true' fontcolor='#555555'>)</run>
                <run fontcolor='#787878'> ranking:  &lt;[federated.0ita4o90sii9np1b4fbp203w283v].[rank:usr:Golden Ratios (copy):qk:21]&gt;&#10;&#10;Avg Monthly Rent: &lt;[federated.0ita4o90sii9np1b4fbp203w283v].[avg:price_usd:qk]&gt;&#10;Avg Monthly Salary: &lt;[federated.0ita4o90sii9np1b4fbp203w283v].[avg:Mean Prse (copy):qk]&gt;&#10;Population Growth (since 1980s): &lt;[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890979729410:nk]&gt;&#10;Daily Minutes Wasted in Traffic: &lt;[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890985922566:nk]&gt;&#10;Commuter Stress Index: &lt;[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890991382537:nk]&gt;</run>
                <run bold='true'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-color' value='#edc948' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#edc948' />
                <format attr='size' value='2.5524861812591553' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ita4o90sii9np1b4fbp203w283v].[Latitude (generated)]</rows>
        <cols>[federated.0ita4o90sii9np1b4fbp203w283v].[Longitude (generated)]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0ita4o90sii9np1b4fbp203w283v].[attr:ahod_per_cons:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='where(ii)'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='census_mapping_rental' name='federated.0ita4o90sii9np1b4fbp203w283v' />
      </datasources>
      <datasource-dependencies datasource='federated.0ita4o90sii9np1b4fbp203w283v'>
        <column datatype='string' name='[Cbsa Code]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal'>
          <semantic-values semantic-role='[CMSA].[Name]'>
            <semantic-value key='&quot;11244&quot;' value='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' />
            <semantic-value key='&quot;16974&quot;' value='&quot;Chicago-Naperville-Elgin, IL-IN-WI&quot;' />
            <semantic-value key='&quot;19124&quot;' value='&quot;Dallas-Fort Worth-Arlington, TX&quot;' />
            <semantic-value key='&quot;19804&quot;' value='&quot;Detroit-Warren-Dearborn, MI&quot;' />
            <semantic-value key='&quot;22744&quot;' value='&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;' />
            <semantic-value key='&quot;23104&quot;' value='&quot;Dallas-Fort Worth-Arlington, TX&quot;' />
            <semantic-value key='&quot;31084&quot;' value='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' />
            <semantic-value key='&quot;33124&quot;' value='&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;' />
            <semantic-value key='&quot;35614&quot;' value='&quot;New York-Newark-Jersey City, NY-NJ-PA&quot;' />
            <semantic-value key='&quot;37964&quot;' value='&quot;Philadelphia-Camden-Wilmington, PA-NJ-DE-MD&quot;' />
            <semantic-value key='&quot;41884&quot;' value='&quot;San Francisco-Oakland-Hayward, CA&quot;' />
            <semantic-value key='&quot;42644&quot;' value='&quot;Seattle-Tacoma-Bellevue, WA&quot;' />
            <semantic-value key='&quot;47894&quot;' value='&quot;Washington-Arlington-Alexandria, DC-VA-MD-WV&quot;' />
            <semantic-value key='&quot;71654&quot;' value='&quot;Boston-Cambridge-Newton, MA-NH&quot;' />
            <semantic-value key='&quot;72400&quot;' value='&quot;Burlington-South Burlington, VT&quot;' />
            <semantic-value key='&quot;73450&quot;' value='&quot;Hartford-West Hartford-East Hartford, CT&quot;' />
            <semantic-value key='&quot;74950&quot;' value='&quot;Manchester-Nashua, NH&quot;' />
            <semantic-value key='&quot;75700&quot;' value='&quot;New Haven-Milford, CT&quot;' />
            <semantic-value key='&quot;76750&quot;' value='&quot;Portland-South Portland, ME&quot;' />
            <semantic-value key='&quot;77200&quot;' value='&quot;Providence-Warwick, RI-MA&quot;' />
            <semantic-value key='&quot;78100&quot;' value='&quot;Springfield, MA&quot;' />
            <semantic-value key='&quot;79600&quot;' value='&quot;Worcester, MA-CT&quot;' />
          </semantic-values>
        </column>
        <column datatype='real' datatype-customized='true' default-format='n#,##0.0' name='[Golden Ratios (copy)]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='AVG([Mean Prse (copy)])/AVG([price_usd])' />
        </column>
        <column aggregate-role-from='[State]' caption='City' datatype='string' name='[Metro Name]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;California-Lexington Park, MD&quot;' value='Lexington Park, MD' />
            <alias key='&quot;Crestview-Fort Walton Beach-Destin, FL&quot;' value='Fort Walton Beach, FL' />
            <alias key='&quot;Dallas-Fort Worth, TX&quot;' value='Dallas, TX' />
            <alias key='&quot;Lafayette-West Lafayette, IN&quot;' value='West Lafayette, IN' />
            <alias key='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' value='Los Angeles, CA' />
            <alias key='&quot;Louisville-Jefferson County, KY&quot;' value='Louisville, KY' />
            <alias key='&quot;Miami-Fort Lauderdale, FL&quot;' value='Miami, FL' />
            <alias key='&quot;Minneapolis-St Paul, MN&quot;' value='Minneapolis, MN' />
            <alias key='&quot;North Port-Sarasota-Bradenton, FL&quot;' value='Sarasota, FL' />
            <alias key='&quot;Santa Maria-Santa Barbara, CA&quot;' value='Santa Barbara, CA' />
          </aliases>
        </column>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column caption='Bed Df' datatype='string' name='[bed_df]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;0&quot;' value='Studio' />
            <alias key='&quot;1&quot;' value='1 Bdrm' />
            <alias key='&quot;2&quot;' value='2 Bdrm' />
            <alias key='&quot;3&quot;' value='3 Bdrm' />
            <alias key='&quot;4&quot;' value='4 Bdrm' />
            <alias key='&quot;5&quot;' value='5 Bdrm +' />
          </aliases>
        </column>
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[bed_df]' derivation='None' name='[none:bed_df:nk]' pivot='key' type='nominal' />
        <column-instance column='[occ_title]' derivation='None' name='[none:occ_title:nk]' pivot='key' type='nominal' />
        <column caption='Occ Title' datatype='string' name='[occ_title]' role='dimension' type='nominal' />
        <column-instance column='[Golden Ratios (copy)]' derivation='User' name='[rank:usr:Golden Ratios (copy):qk:21]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Field' rank-options='Unique,Descending' type='Rank'>
            <order field='[federated.0ita4o90sii9np1b4fbp203w283v].[Metro Name]' />
            <order field='[federated.0ita4o90sii9np1b4fbp203w283v].[Cbsa Code]' />
          </table-calc>
        </column-instance>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='76562' x='0' y='0'>
              <zone h='100000' id='1' name='where(ii) map' w='76562' x='0' y='0' />
            </zone>
            <zone fixed-size='240' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='23438' x='76562' y='0'>
              <zone fixed-size='66' h='10157' id='6' is-fixed='true' mode='typeinlist' name='where(ii) map' param='[federated.0ita4o90sii9np1b4fbp203w283v].[none:occ_title:nk]' type='filter' w='23438' x='76562' y='0' />
              <zone fixed-size='178' h='24219' id='7' is-fixed='true' mode='radiolist' name='where(ii) map' param='[federated.0ita4o90sii9np1b4fbp203w283v].[none:Region:nk]' type='filter' values='context' w='23438' x='76562' y='10157' />
              <zone fixed-size='166' h='22657' id='8' is-fixed='true' mode='radiolist' name='where(ii) map' param='[federated.0ita4o90sii9np1b4fbp203w283v].[none:bed_df:nk]' type='filter' values='context' w='23438' x='76562' y='34376' />
              <zone h='10938' id='11' name='where(ii) map' param='[federated.0ita4o90sii9np1b4fbp203w283v].[rank:usr:Golden Ratios (copy):qk:21]' show-filter-state='false' show-null-ctrls='false' type='filter' w='23438' x='76562' y='57033' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='51'>
    <window class='worksheet' name='where(ii) map'>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='231'>
            <card mode='typeinlist' param='[federated.0ita4o90sii9np1b4fbp203w283v].[none:occ_title:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0ita4o90sii9np1b4fbp203w283v].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0ita4o90sii9np1b4fbp203w283v].[none:bed_df:nk]' type='filter' values='relevant' />
            <card param='[federated.0ita4o90sii9np1b4fbp203w283v].[rank:usr:Golden Ratios (copy):qk:21]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05rqn2s1hh0wpr12r575r0mgazrc].[none:Calculation_1084100890980507651:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[Top 10 Most Affordable Cities]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[io:Top 10 Most Affordable Cities:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:Calculation_964825868918755329:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:Cbsa Code:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:City (copy):nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:Metro Name:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:Region:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:State:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:ahod_per_cons:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:area_name:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:bed_df:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:csi_val:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:occ_title:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:population:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[none:population:ok]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[rank:usr:Golden Ratios (copy):ok:11]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1024287457972670464:ok]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890979729410:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890985922566:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_1084100890991382537:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Calculation_964825868887568384:nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Golden Ratio (copy):nk]</field>
            <field>[federated.0ita4o90sii9np1b4fbp203w283v].[usr:Golden Ratio (copy):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='where(ii)'>
      <viewpoints>
        <viewpoint name='where(ii) map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <device-preview visible='true' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='where(ii)' width='384'>
      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
      58+5reu6bLp5Ex/80IdwHIeXX3mZQIhx2fSNF5Ik40+zdv9AiDGxgUrXGRIs7ljMnDlz+c1v
      fg2E14hpmoNdyZIEiDNY+Lqus2bNWjzPo7+/rxyMDcNg1arVpFJJdu/aVd7eDwLmzJ1LJpNB
      CMHs2XPo6em+YAq2bVsYpjkqRbpoWWH6SVVxPY9sturfOx1xxgDQ39fP3/zN/wVA4Afouo6m
      Knz96/+Eoij85Mc/QpZlfvLjH0XqlhLf/va3QMDXv/5P4azQ90GSePTR76AqGp7vYZrmRR2o
      JEn09HRz+223c/TYUY4fP4EkSXR0dLBx4w2sXr2a73znO9xyyy00NDbQ39fHs88+ywc/+CG6
      urqoqakhk8nwxhtvkMmkueOOd3Hq1Cnq6uqYM2cOP/7xj7j33vfheR6KorBnz24OHTrEAw98
      mNOnTwOwZcsW/vzP/4yXXtrK4cOHqaurZeHCRezcseOiPtvZPq+qqqiqdt7gDyFraPfuXRw7
      dowTJ06QyWSor6ub8OMa9p6yhOdNr1mh6zhouo5uGOccBBRZJplMcsUVSykWCiSTSWQptMbx
      PY9isYiuGwiRJZVMsXLlylDjyffLHgTFYpGXXnqRd7/7PWiahueGooXz5s3D932SqVQ0KISB
      17HD5rpCvgBAR0cHJ0+eQI2dmZIdCyRZRgSjf3+KotDXPxAK/VVz/tMWyhe/+MUvDn3gySef
      ZGCgH1VV0TStLKurRRxiTdOiwKSilX+HXcGaqqJG22jR44oio6nqRV9AiqLw+q5dSJLEosWL
      ue3223j55ZdZunQpjz/+ExRZwYzFaGho4MUXXmTvnj0s7lhCe3s7hw8fYs2atTz77P9mw4aN
      JBIJDr71Frfffjs7d+5ECEFLczM1tTX86umn2fX6Lm67/TY0VeXw4UO8+MILbLrlFt544wCm
      GePXTz/NQHKAjo4ONm/ejKZd/OcrQQiBaZooqoqsKARBQDYXrmSU8yzX+wcG+PnPf8GLL75A
      bSIx6c15qqZNO4lfNbqG7fOsAGRZpqu7q9wNv3//PgzDiCQQwvqXJElks1kKhTyFYpGYGWP3
      rtfDWpTrYtsOA/39ZHPZ0P9BhJIWjY2N9PT0cvpUJ5qmYlkW2WwG13PD99q7j5OnTiIEpNOD
      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
      BYCIyEL9Ate1Qf93CLghAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='where(ii) map' width='384'>
      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
      iYggCIQCATRVpTUaI5VKkdJ1KvbvpyA/n8zMzJOyZQRB8FQndb2D+346wXVdcvPy8KkqmqZR
      XV39nt/j2Kb50efPdV0M00TXPdXN9r+3755E0eul+P1+Av53d358qs9TJj3BoNaZhh6TADRV
      4Gu3F/LKSp0vXnfi4H80/D6BW+cH+ftLcc4ZofKDP7YybYyPsaUKWekirgsNLQ5b95l884Hm
      E7JKThc8vTjO9+/M4OnXE3zmiiCyIjFkYFdbuhGl6V3+33VdFixNMmOcj0cXnNrVf3ewbIgm
      To/zWJgrceiIzeC+nY+BmbIxBIWgYYMLa5fXUjq+kC9dms2N393JrRfkoLbtDgf1ldlZYdGv
      UD5hAjAty+O0n2R1Cl7zN3gC/wpZlsnKSKeu3uxwt6pvaKCosJCmpqaOoOdT1Y4hofZ/c12X
      1kgUn6q+Z/XMd4P3Qn08NgH6/X4c26a2thZZUd6XUJvjuhi6TlHv3jQ1NtLQ2OhRO/VUhwxz
      d9IdAb+GYZgggF87+WyHZyKvk0rp6IaObZ8+vb8Pih6TAM6flEbFIZgzWUNVvIu9ZVsjS7d4
      27XLL+1DUNd55MVDuKrMF27qR0AWSAuKlJYoSJJAZprIC28leeGtD86C+U+gtsHh+TcTTB7t
      4+nXk1w929+lKXwsHMdl8Vodnyqwvcxke1nPWNW8W6QFRSJxh5LCzsdAC6ncek0hb670asqN
      9QZDhmYSCKtkBBwSJqht8SLkF4knXcLB7s+xbds0t7SiKAq2bXfLKgm26b2/U3A+NjB2p4Nj
      2TY5WVkYptnxWV4JyyKZSp1Sg/J2AbyMzMzO8bSOckpXAb/2bZ7b+eKO4+uPHPEGqt6n9IUA
      NDc309raSiAYojVyfG+u/dwF/BoZ6ekd51qWTx7+2ktHkVjsPZWmziT0mAQwe0o6O/dbXDyt
      cyv3yqJqCscWUpork64KfOvenZx7UQmD2lb37ThnhMpTryeYNsbH3srTsL7zHvD66hRZ6SLD
      Bij88ekYl0z3069QOm5rXNvosGBpkn5FMoLg8vgrH/7q/3RDPOVJRCeSx69i289WRqbM5oNJ
      jOF+InER7SiyWNJw0XxeKetYuG0iYZIokhYO09B4vLJjKBQkPRx+D9+483O8VW3Xv9q2jWVb
      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
    </thumbnail>
  </thumbnails>
</workbook>
